<!DOCTYPE html>
<html lang="en">
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta charset="UTF-8">
	<title>crypto trader</title>
</head>

<style>
	.each-balance {
		margin: 10px 0;
		transition: background .1s;
	}
	.each-balance.colored {
		background: bisque;
	}
	.balance-info {
		font-size: 12px;
	}
	.orange {
		background: #f5c163;
		font-weight: bold;
		padding: 0 3px;
	}
	.ok {
		background: lightgreen;
	}
	.not-ok {
		background: orangered;
		color: white;
	}
	.each-balance-currency-pairs {
		font-size: 11px;
	}
	.altcoins-container {
	}
	.each-altcoin {
		margin: 5px 0;
		font-size: 11px;
	}
	.closed-pairs {
		font-size: 11px;
	}
	.title {
		font-size: 13px;
	}
	.each-closed-pair {
		margin: 5px 0;
	}
	.each-closed-pair-info {
		padding: 5px;
		display: block;
	}
	.each-closed-pair-info p {
		margin: 0;
	}
	.altcoin-graph-link {
		cursor: pointer;
	}
	.tradeable {
		background: lightgreen;
	}
	.active-panel {
		background: #e5e5e5;
		border-radius: 2px;
		padding: 10px;
		overflow: hidden;
	}
	.exchanges-panel {
		background: #d6d6d6;
		padding: 10px;
		padding-bottom: 20px;
		overflow: hidden;
	}
	.exchanges-panel .button-wrapper {
		margin-right: 10px;
		margin-top: 10px;
	}
	.exchange-info-panel {
		background: burlywood;
		padding: 10px 0;
	}
	.exchange-settings-panel {
		background: antiquewhite;
		padding: 10px 0 0px;
	}
	.panel-info {
		font-size: 12px;
		margin-top: 10px;
	}
	.gold {
		background: gold;
	}
	.yesterday {
		background: bisque;
	}
	.buttons-container {
		padding-bottom: 10px;
	}
	.buttons-container button {
		margin-right: 10px;
		margin-top: 10px;
	}
	.open-buy-orders {
		font-size: 12px;
		margin-bottom: 15px;
	}
	.toggle-panel {
		background: gold;
		margin-bottom: 20px;
		overflow: hidden;
	}
	.toggle-panel-button {
		text-align: center;
		cursor: pointer;
		font-weight: bold;
		padding: 10px 0;
	}
	.toggle-panel-button.selected {
		background: darkgoldenrod;
		color: white;
	}
	.content {
		margin-top: 10px;
	}
	.each-bot-panel {
	}
	.each-currency-pair {
		position: relative;
		transition: background 0.2s;
		background: aliceblue;
		padding: 2px;
	}
	.each-currency-pair.removed {
		background: coral
	}
	.trader-summary-counts {
		font-size: 12px;
	    margin-left: 5px;
	    font-weight: bold;
	}
	.close-button {
		position: absolute;
		top: 0;
		right: 0;
		width: 18px;
		height: 18px;
		cursor: pointer;
		text-align: center;
		line-height: 18px;
	}
	.close-button:hover {
		background: coral;
	}
	.toggler {
		position: relative;
		left: -5px;
		border-bottom-left-radius: 0 !important;
		border-top-left-radius: 0 !important;
	}
	.pre-toggler {
		border-bottom-right-radius: 0 !important;
		border-top-right-radius: 0 !important;
	}
	.info-container {
		padding: 15px 0;
	}
	.each-pair-to-buy {
		padding: 10px;
		background: #f5f5f5;
		margin-bottom: 5px;
		font-size: 11px;
	}
	.each-pair-to-buy.success {
		background: lightgreen;
	}
	.each-pair-to-buy.error {
		background: coral;
	}

</style>

<script>
	!function(){"use strict";var a=function(a,b){var c=0,d=0,e=0,f=0,g=0,h=a.length-1,i=new Array(b);for(c=0;h>c;c++){for(f=c,d=c+1;h>d;d++)Math.abs(a[c][d])>Math.abs(a[c][f])&&(f=d);for(e=c;h+1>e;e++)g=a[e][c],a[e][c]=a[e][f],a[e][f]=g;for(d=c+1;h>d;d++)for(e=h;e>=c;e--)a[e][d]-=a[e][c]*a[c][d]/a[c][c]}for(d=h-1;d>=0;d--){for(g=0,e=d+1;h>e;e++)g+=a[e][d]*i[e];i[d]=(a[h][d]-g)/a[d][d]}return i},b={linear:function(a){for(var b=[0,0,0,0,0],c=0,d=[];c<a.length;c++)null!=a[c][1]&&(b[0]+=a[c][0],b[1]+=a[c][1],b[2]+=a[c][0]*a[c][0],b[3]+=a[c][0]*a[c][1],b[4]+=a[c][1]*a[c][1]);for(var e=(c*b[3]-b[0]*b[1])/(c*b[2]-b[0]*b[0]),f=b[1]/c-e*b[0]/c,g=0,h=a.length;h>g;g++){var i=[a[g][0],a[g][0]*e+f];d.push(i)}var j="y = "+Math.round(100*e)/100+"x + "+Math.round(100*f)/100;return{equation:[e,f],points:d,string:j}},linearThroughOrigin:function(a){for(var b=[0,0],c=0,d=[];c<a.length;c++)null!=a[c][1]&&(b[0]+=a[c][0]*a[c][0],b[1]+=a[c][0]*a[c][1]);for(var e=b[1]/b[0],f=0,g=a.length;g>f;f++){var h=[a[f][0],a[f][0]*e];d.push(h)}var i="y = "+Math.round(100*e)/100+"x";return{equation:[e],points:d,string:i}},exponential:function(a){var b=[0,0,0,0,0,0],c=0,d=[];for(i=a.length;i>c;c++)null!=a[c][1]&&(b[0]+=a[c][0],b[1]+=a[c][1],b[2]+=a[c][0]*a[c][0]*a[c][1],b[3]+=a[c][1]*Math.log(a[c][1]),b[4]+=a[c][0]*a[c][1]*Math.log(a[c][1]),b[5]+=a[c][0]*a[c][1]);for(var e=b[1]*b[2]-b[5]*b[5],f=Math.pow(Math.E,(b[2]*b[3]-b[5]*b[4])/e),g=(b[1]*b[4]-b[5]*b[3])/e,h=0,i=a.length;i>h;h++){var j=[a[h][0],f*Math.pow(Math.E,g*a[h][0])];d.push(j)}var k="y = "+Math.round(100*f)/100+"e^("+Math.round(100*g)/100+"x)";return{equation:[f,g],points:d,string:k}},logarithmic:function(a){var b=[0,0,0,0],c=0,d=[];for(h=a.length;h>c;c++)null!=a[c][1]&&(b[0]+=Math.log(a[c][0]),b[1]+=a[c][1]*Math.log(a[c][0]),b[2]+=a[c][1],b[3]+=Math.pow(Math.log(a[c][0]),2));for(var e=(c*b[1]-b[2]*b[0])/(c*b[3]-b[0]*b[0]),f=(b[2]-e*b[0])/c,g=0,h=a.length;h>g;g++){var i=[a[g][0],f+e*Math.log(a[g][0])];d.push(i)}var j="y = "+Math.round(100*f)/100+" + "+Math.round(100*e)/100+" ln(x)";return{equation:[f,e],points:d,string:j}},power:function(a){var b=[0,0,0,0],c=0,d=[];for(h=a.length;h>c;c++)null!=a[c][1]&&(b[0]+=Math.log(a[c][0]),b[1]+=Math.log(a[c][1])*Math.log(a[c][0]),b[2]+=Math.log(a[c][1]),b[3]+=Math.pow(Math.log(a[c][0]),2));for(var e=(c*b[1]-b[2]*b[0])/(c*b[3]-b[0]*b[0]),f=Math.pow(Math.E,(b[2]-e*b[0])/c),g=0,h=a.length;h>g;g++){var i=[a[g][0],f*Math.pow(a[g][0],e)];d.push(i)}var j="y = "+Math.round(100*f)/100+"x^"+Math.round(100*e)/100;return{equation:[f,e],points:d,string:j}},polynomial:function(b,c){"undefined"==typeof c&&(c=2);for(var d=[],e=[],f=[],g=0,h=0,i=0,j=c+1;j>i;i++){for(var k=0,l=b.length;l>k;k++)null!=b[k][1]&&(g+=Math.pow(b[k][0],i)*b[k][1]);d.push(g),g=0;for(var m=[],n=0;j>n;n++){for(var k=0,l=b.length;l>k;k++)null!=b[k][1]&&(h+=Math.pow(b[k][0],i+n));m.push(h),h=0}e.push(m)}e.push(d);for(var o=a(e,j),i=0,l=b.length;l>i;i++){for(var p=0,q=0;q<o.length;q++)p+=o[q]*Math.pow(b[i][0],q);f.push([b[i][0],p])}for(var r="y = ",i=o.length-1;i>=0;i--)r+=i>1?Math.round(o[i]*Math.pow(10,i))/Math.pow(10,i)+"x^"+i+" + ":1==i?Math.round(100*o[i])/100+"x + ":Math.round(100*o[i])/100;return{equation:o,points:f,string:r}},lastvalue:function(a){for(var b=[],c=null,d=0;d<a.length;d++)a[d][1]?(c=a[d][1],b.push([a[d][0],a[d][1]])):b.push([a[d][0],c]);return{equation:[c],points:b,string:""+c}}},c=function(a,c,d){return"string"==typeof a?b[a](c,d):void 0};"undefined"!=typeof exports?module.exports=c:window.regression=c}();
</script>

<script>
	window.bot = <%- JSON.stringify(bot) %>;
</script>

<script src="libs/angular/angular.js"></script>
<script src="libs/jquery/dist/jquery.js"></script>
<script src="libs/highcharts/js/highcharts.js"></script>
<script src="libs/lodash/dist/lodash.js"></script>
<script src="libs/moment.js"></script>
<link rel="stylesheet" href="libs/bootstrap/dist/css/bootstrap.css"></link>
<link rel="stylesheet" href="libs/highcharts/css/highcharts.css"></link>
<script src="scripts/main.js"></script>
<body ng-app="crypto" ng-controller="main">
	
	<div class="active-panel">
		<div class="container">
			<div class="buttons-container">
				<button class="btn btn-xs btn-success" ng-click="checkCycle()">ПРОВЕРКА</button>
				<button class="btn btn-xs btn-primary" ng-click="tradeCycle()">ПРОТОРГОВАТЬСЯ</button>
				<button class="btn btn-xs btn-success" ng-click="loopTradeCycle()">ТОРГОВАТЬ</button>
				<button class="btn btn-xs btn-danger" ng-click="stopLoopTradeCycle()">ПЕРЕСТАТЬ ТОРГОВАТЬ</button>
				<a href="/log" target="_blank"><button class="btn btn-xs btn-primary">ЛОГ</button></a>
			</div>
		</div>
		
	</div>

	<div class="exchanges-panel" ng-if="bot">
		<div class="container">

			<span ng-repeat="trader in bot.TRADERS" class="button-wrapper button-group">
				<button class="btn btn-xs pre-toggler" ng-class="{ 'btn-primary' : trader.active, 'btn-gray' : !trader.active }" ng-click="setTraderSelected(trader)">{{ trader.exchange.name }}</button>
				<button ng-click="toggleExchange(trader)" ng-class="{ 'btn-danger' : trader.active, 'btn-success' : !trader.active}" class="btn btn-xs toggler">IOI</button>
				
			</span>
			<!-- <button class="btn btn-xs btn-success" ng-click="showInfo = !showInfo">Инфо</button> -->
			
		</div>
	</div>

	<div class="exchange-settings-panel" ng-if="selectedTrader">
		<div class="container">
			<div class="form-group">
				<label for="stop loss k">stop loss k</label>
				<input class="from-control" type="text" ng-model="selectedTrader.exchange.stop_loss_koef">
				<label for="stop loss k">profit k</label>
				<input class="from-control" type="text" ng-model="selectedTrader.exchange.profit_koef">
				<label for="stop loss k">ok rank value</label>
				<input class="from-control" type="text" ng-model="selectedTrader.exchange.ok_rank_value">
				<label for="stop loss k">ok spread value, %</label>
				<input class="from-control" type="text" ng-model="selectedTrader.exchange.ok_spread_value">
				<button class="btn btn-xs btn-success" ng-click="saveTraderChanges(selectedTrader)">Применить</button>
			</div>
		</div>
	</div>

	
	<div class="each-bot-panel" ng-if="trader.total_balances" ng-repeat="trader in bot.TRADERS" ng-show="trader == selectedTrader">

		<div class="exchange-info-panel">
			<div class="container">
				<div><b>{{ trader.exchange.name }}</b>
					<span class="balance-info">
						<span>[ {{ trader.summary.inBTC | number:6 }} BTC </span> 
						/ 
						<span class="orange">{{ inUSD(trader, trader.summary.inBTC) | number:2}} USD</span> ]
					</span>

					<span class="balance-info" ng-class="trader.summary.today_incomeInBTC > 0 ? 'ok' : 'not-ok'">
						<span> [ {{ trader.summary.today_incomeInBTC | number:6 }} BTC</span>
						/
						<span> {{ inUSD(trader, trader.summary.today_incomeInBTC) | number:2 }} USD ]</span>
					</span>
					<span class="trader-summary-counts"> [{{ trader.summary.pairsCount }}]</span>
				</div>

				<div class="panel-info" ng-if="trader.btc_usd.best_ask">min buy price : {{ trader.exchange.max_buy_order_price }} BTC / {{ trader.btc_usd.best_ask * trader.exchange.max_buy_order_price | number:2 }} USD</div>
			</div>	
		</div>
		
		<div ng-if="showInfo" class="info-container container">
			<p>Инфо контейнер</p>
			<!-- <button ng-click="makeChart(trader)" class="btn btn-xs btn-primary">Получить база/фиат</button> -->
			<!-- <div id="chart-{{ trader.exchange.name }}"></div> -->
			<p>Последние пары для покупки</p>
			<!-- <div class="each-pair-to-buy" ng-repeat="pair in trader.able_to_buy_pairs" ng-show="trader.pairs_graph_data[pair.symbol]" ng-class="{ success : pair.is_graph_acceptable, error : !pair.is_graph_acceptable }"> -->
			<div class="col-xs-6 each-pair-to-buy" ng-repeat="pair in trader.tradeable_exchange_pairs" ng-show="trader.pairs_graph_data[pair.symbol]" ng-class="{ success : pair.is_graph_acceptable, error : !pair.is_graph_acceptable }">
				<b>{{ pair.symbol }}</b>
				<span>best_ask {{ pair.best_ask }}</span> | 
				<span>best_bid {{ pair.best_bid }}</span> | 
				<span>volume {{ pair.volume }}</span> | 
				<p>
					<span>spread {{ pair.spread_value | number:2 }}</span> |
					<span>diff {{ pair.diff_value | number:2 }}</span> |
					<span>baseline_m {{ pair.baseline_m }}</span>

				</p>
				<p>
					<span>first_base_y: {{ pair.first_base_y }}</span> | 
					<span>last_max_y: {{ pair.last_base_y }}</span>
					<span>diff: {{ (pair.last_base_y - pair.first_base_y) / pair.first_base_y * 100 | number:2 }}</span>
				</p>
				<div id="graph-{{trader.exchange.name}}-{{pair.symbol}}" ng-init="makeGraph(trader, pair)"></div>
			</div>
		</div>

		<div class="toggle-panel visible-xs">
			<div class="toggle-panel-button col-xs-6" ng-class="{ selected : view == 'closed'}" ng-click="view = 'closed'" >Закрытые</div>
			<div class="toggle-panel-button col-xs-6" ng-class="{ selected : view == 'buy_and_sell'}" ng-click="view = 'buy_and_sell'">Продажи</div>
		</div>

		<div class="container content">

			<div class="closed-pairs col-xs-12 col-sm-6" ng-if="trader.closed_orders && (!view || view == 'closed')">
				<div class="title">Закрытые сделки</div>


				<div class="each-closed-pair">
					<b>Итого</b> [ {{ trader.summary.closed_ordersInBTC | number:6 }} BTC / {{ inUSD(trader, trader.summary.closed_ordersInBTC) | number:2 }} USD ]
				</div>
				
				<div class="each-closed-pair" ng-repeat="pair in trader.closed_orders | orderBy:'-lastModificationTime'" ng-class="{ gold : moment(date_long).isSame(pair.lastModificationTime, 'd'), yesterday : moment(date_long).isSame(moment(pair.lastModificationTime).add(1, 'd'), 'd') }">
					{{ $index + 1 }}. <b>{{ pair.currencyPair }}</b> / 
					<span ng-class="(pair.buy_order.quantity * pair.price - pair.buy_order.quantity * pair.buy_order.price) > 0 ? 'ok' : 'not-ok'">{{pair.quantity * pair.price - pair.quantity * pair.buy_order.price | number:6 }} BTC [ {{ inUSD(trader, pair.quantity * pair.price - pair.quantity * pair.buy_order.price) | number:2 }} USD]</span>

					<span>{{ moment(pair.lastModificationTime).locale('ru').format('LLL') }}</span>

					<div class="each-closed-pair-info">
						<p>buy 
							<span>q: {{ pair.buy_order.quantity | number:8 }}</span>
							<span>pr: {{ pair.buy_order.price | number:8 }}</span>
							<span>time: {{ moment(pair.buy_order.lastModificationTime).locale('ru').format('LLL') }}</span>
						</p>
						<p>sell 
							<span>q: {{ pair.quantity | number:8 }}</span>
							<span>pr: {{ pair.price | number:8 }}</span>
							<span>time: {{ moment(pair.lastModificationTime).locale('ru').format('LLL') }}</span>
							<span>r: {{ pair.reason }}</span>
						</p>
					</div>
				</div>
			</div>

			<div class="col-xs-12 col-sm-4" ng-if="!view || view == 'buy_and_sell'">
				<div class="open-buy-orders" ng-if="trader.open_buy_orders.length">
					<div class="title">Покупка</div>
					<div ng-repeat="order in trader.open_buy_orders">
						<b>{{ order.currencyPair }}</b> [ 
						<span>{{ order.price * order.quantity | number:6 }} BTC</span>
						 / 
						 <span>{{ inUSD(trader, order.price * order.quantity) | number:2 }} USD</span> ]
					</div>
				</div>


				<div class="balances-container" ng-if="trader.total_balances">
					<div class="each-balance" ng-repeat="balance in trader.total_balances" ng-class="{ colored : !balance.order_pairs }">
						<div class="balance-info">
							<a href="https://www.livecoin.net/ru/trade/index?currencyPair={{ balance.currency }}/BTC" target="_blank"><b>{{ balance.currency }}</b></a> [ 
							<span>{{ balance.inBTC | number:6 }} BTC </span> 
							/ 
							<span>{{ inUSD(trader, balance.inBTC) | number:2 }} USD </span> ]
						</div>
						<div class="each-balance-currency-pairs">
							<div class="each-currency-pair" ng-repeat="pair in balance.order_pairs" ng-class="{ removed : pair.removed }">
								<!-- <div>{{ pair.buy_order | json }}</div> -->
								<!-- <div>{{ pair.sell_order | json }}</div> -->
								<div>
									<!-- <span>{{ pair.sell_order.inBTC | number:8 }} BTC / </span> -->
									<!-- <span>{{ pair.buy_order.inBTC | number:8 }} BTC / </span> -->
									<span>{{ pair.sell_order.price * pair.sell_order.quantity - pair.buy_order.price * pair.sell_order.quantity | number:8 }} BTC / </span>
									<span ng-class="inUSD(trader, pair.sell_order.price * pair.sell_order.quantity - pair.buy_order.price * pair.sell_order.quantity) > 0 ? 'ok' : 'not-ok'">{{ inUSD(trader, pair.sell_order.price * pair.sell_order.quantity - pair.buy_order.price * pair.sell_order.quantity) | number:2 }} USD</span>
									<span> / </span>
									<span ng-class="(pair.sell_order.price * pair.sell_order.quantity - pair.buy_order.price * pair.sell_order.quantity)/pair.buy_order.inBTC > 0 ? 'ok' : 'not-ok'">
										{{(pair.sell_order.price * pair.sell_order.quantity - pair.buy_order.price * pair.sell_order.quantity)/pair.sell_order.inBTC * 100 | number:2}}%
									</span>
									<span ng-class="(balance.best_ask * pair.buy_order.quantity - pair.buy_order.inBTC)/pair.buy_order.inBTC > 0 ? 'ok' : 'not-ok'">
										{{(balance.best_ask * pair.buy_order.quantity - pair.buy_order.inBTC)/pair.buy_order.inBTC * 100 | number:2}}% ]
									</span>
									<span class="each-closed-pair-info">
										<p>buy 
											<span>q: {{ pair.buy_order.quantity | number:8 }}</span>
											<span>pr: {{ pair.buy_order.price | number:8 }}</span>
											<span>time: {{ moment(pair.buy_order.lastModificationTime).locale('ru').format('LLL') }}</span>
										</p>
										<p>sell 
											<span>q: {{ pair.sell_order.quantity | number:8 }}</span>
											<span>pr: {{ pair.sell_order.price | number:8 }}</span>
											<span>time: {{ moment(pair.sell_order.lastModificationTime).locale('ru').format('LLL') }}</span>
										</p>
									</span>
									<!-- <span ng-class="balance.best_ask * pair.sell_order.quantity - pair.sell_order.inBTC > 0 ? 'ok' : 'not-ok'">
										 [ {{ inUSD(trader, balance.best_ask * pair.sell_order.quantity - pair.sell_order.inBTC) | number:2 }} USD / </span> -->

									<!-- <span ng-class="balance.best_ask * pair.buy_order.quantity - pair.buy_order.inBTC > 0 ? 'ok' : 'not-ok'">
										[ {{ inUSD(trader, balance.best_ask * pair.buy_order.quantity - pair.buy_order.inBTC) | number:2 }} USD </span> -->
									<!-- <span> / </span> -->

								</div>

								<span ng-click="removeOrder(pair, selectedTrader.exchange.name)" class="close-button">x</span>
							</div>

						</div>
					</div>
				</div>

			</div>
			<div class="altcoins-container col-sm-2 hidden-xs">
				<div class="each-altcoin" ng-repeat="altcoin in trader.exchange_pairs" ng-class="{ tradeable : altcoin.tradeable }">
					<i>{{ altcoin.rank | number:2 }}</i>
					<b>{{ altcoin.symbol }}</b>
					<!-- <a href="https://www.livecoin.net/ru/trade/index?currencyPair={{ altcoin.symbol }}" target="_blank"><b>{{ altcoin.symbol }}</b></a> [ {{altcoin.best_ask | number : 6}} BTC | vol: {{ altcoin.volume * altcoin.best_ask | number:2 }} BTC |  -->
					<!-- <span ng-if="altcoin.price_change" ng-class="altcoin.price_change > 0 ? 'ok' : 'not-ok'">{{ altcoin.price_change | number:2 }}%</span> ] -->
					<!-- <a class="altcoin-graph-link" ng-click="getChartData(altcoin, 5/24)">5h</a> /  -->
					<!-- <a class="altcoin-graph-link" ng-click="getChartData(altcoin, 1)">1d</a> /  -->
					<!-- <a class="altcoin-graph-link" ng-click="getChartData(altcoin, 2)">2d</a> -->

					<div class="chart-info" id="chart-data-{{ altcoin.symbol }}"></div>
				</div>
			</div>
		</div>
	</div>
</body>
</html>